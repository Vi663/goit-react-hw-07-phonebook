{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducers.js","redux/store.js","components/MainContainer/MainContainer.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","uuidv4","filterContacts","contactActions","deleteContact","itemsReducer","createReducer","name","number","contactsActions","state","filter","filterReducer","_","combineReducers","items","store","configureStore","reducer","contacts","contactsReducers","MainContainer","children","className","getFilterValue","getContacts","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","initialState","useState","setState","useSelector","dispatch","useDispatch","nameInputId","numberInputId","handleChange","event","target","value","prevState","resetContact","s","contactForm","autoComplete","onSubmit","e","preventDefault","find","contact","alert","contactLabel","htmlFor","contactInput","type","onChange","pattern","title","required","contactBtn","Filter","filterValue","filterInput","ContactListItem","remove","contactItem","contactItemName","contactItemNumber","onClick","ContactList","isShowContacts","length","contactList","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,8B,iICEpEC,EAAaC,YAAa,gBAAgB,SAACC,GAAD,MAAW,CACzDC,QAAQ,aACNC,GAAIC,eACDH,OAIDI,EAAiBL,YAAa,mBAKrBM,EADS,CAAEP,aAAYQ,cAFhBP,YAAa,mBAEkBK,kBCH/CG,EAAeC,YAPC,CACpB,CAAEN,GAAI,OAAQO,KAAM,gBAAiBC,OAAQ,aAC7C,CAAER,GAAI,OAAQO,KAAM,iBAAkBC,OAAQ,aAC9C,CAAER,GAAI,OAAQO,KAAM,gBAAiBC,OAAQ,aAC7C,CAAER,GAAI,OAAQO,KAAM,iBAAkBC,OAAQ,eAGd,mBAC/BC,EAAgBb,YAAa,SAACc,EAAD,OAAUX,EAAV,EAAUA,QAAV,4BAA4BW,GAA5B,CAAmCX,OADjC,cAE/BU,EAAgBL,eAAgB,SAACM,EAAD,OAAUX,EAAV,EAAUA,QAAV,OAAwBW,EAAMC,QAAO,qBAAGX,KAAgBD,QAFzD,IAK5Ba,EAAgBN,YAAc,GAAD,eAChCG,EAAgBP,gBAAiB,SAACW,EAAD,YAAMd,YAG3Be,cAAgB,CAC7BC,MAAOV,EACPM,OAAQC,ICXKI,EANDC,YAAe,CAC3BC,QAAS,CACPC,SAAUC,K,OCPC,SAASC,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SACtC,OACE,qBAAKC,UAAU,gBAAf,SAAgCD,I,YCFvBE,EAAiB,SAACd,GAAD,OAAWA,EAAMS,SAASR,QAE3Cc,EAAc,SAACf,GAAD,OAAWA,EAAMS,SAASJ,OAExCW,EAAqB,SAAAhB,GAChC,IAAMS,EAAWM,EAAYf,GAEvBiB,EADSH,EAAed,GACEkB,cAEhC,OAAOT,EAASR,QAAO,qBAAGJ,KAAgBqB,cAAcC,SAASF,O,gBCD5D,SAASG,IAEd,IAAMC,EAAe,CACnBxB,KAAM,GACNC,OAAQ,IAGV,EAA0BwB,mBAASD,GAAnC,mBAAOrB,EAAP,KAAcuB,EAAd,KACMd,EAAWe,YAAYT,GACvBU,EAAWC,cAEXC,EAAcpC,cACdqC,EAAgBrC,cAEhBsC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBlC,EAAR,EAAQA,KAAMmC,EAAd,EAAcA,MACdT,GAAS,SAACU,GAAD,mBAAC,eACLA,GADI,kBACQpC,EAAOmC,QAqBpBE,EAAe,WACnBX,EAAS,eAAKF,KAGRxB,EAAiBG,EAAjBH,KAAMC,EAAWE,EAAXF,OACd,OACE,uBAAMe,UAAWsB,IAAEC,YAAaC,aAAa,KAAKC,SAvB/B,SAAAC,GACnBA,EAAEC,iBACF,IAAQ3C,EAAiBG,EAAjBH,KAAMC,EAAWE,EAAXF,OAKd,GAJkBW,EAASgC,MACzB,SAAAC,GAAO,OAAIA,EAAQ7C,KAAKqB,gBAAkBrB,EAAKqB,iBAM/C,OAFAgB,SACAS,MAAM,GAAD,OAAI9C,EAAJ,4BAIP4B,EAAS1B,EAAgBb,WAAW,CAAEW,OAAMC,YAC5CoC,KASA,UACE,uBACErB,UAAWsB,IAAES,aACbC,QAASlB,EAFX,kBAIA,uBACEd,UAAWsB,IAAEW,aACbC,KAAK,OACLlD,KAAK,OACLmC,MAAOnC,EACPP,GAAIqC,EACJqB,SAAUnB,EACVoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAGV,uBACEN,QAASjB,EACTf,UAAWsB,IAAES,aAFf,0BAIA,uBACE/B,UAAWsB,IAAEW,aACbC,KAAK,MACLlD,KAAK,SACLmC,MAAOlC,EACPR,GAAIsC,EACJoB,SAAUnB,EACVoB,QAAQ,yFACRC,MAAM,6iBACNC,UAAQ,IAEV,wBAAQtC,UAAWsB,IAAEiB,WACnBL,KAAK,SACLlD,KAAK,SAFP,4B,qBCjDSwD,EA7BA,WACb,IAAM5B,EAAWC,cACX4B,EAAc9B,YAAYV,GAIhC,OACE,gCACE,sDACA,uBAAOD,UAAWsB,IAAEoB,YAClBR,KAAK,OACLlD,KAAK,SACLmC,MAAOsB,EACPN,SAVkB,SAACT,GACvBd,EAAS1B,EAAgBP,eAAe+C,EAAER,OAAOC,e,gBCPtC,SAASwB,EAAT,GAAyD,IAA7B3D,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OAAQ2D,EAAc,EAAdA,OAAQnE,EAAM,EAANA,GAE/D,OACE,qBAAauB,UAAWsB,IAAEuB,YAA1B,UACE,sBAAM7C,UAAWsB,IAAEwB,gBAAnB,SAAqC9D,IACrC,sBAAMgB,UAAWsB,IAAEyB,kBAAnB,SAAuC9D,IACvC,wBACEe,UAAWsB,IAAEiB,WACbL,KAAK,SACLc,QAASJ,EAHX,sBAHOnE,GCEN,SAASwE,IACd,IAAMrC,EAAWC,cACXjB,EAAWe,YAAYR,GAGvB+C,EAAiBtD,EAASuD,OAAS,EACzC,OACE,8BACGD,GACC,oBAAIlD,UAAWsB,IAAE8B,YAAjB,SACGxD,EAASyD,KAAI,gBAAG5E,EAAH,EAAGA,GAAIO,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAAC0D,EAAD,CAEElE,GAAIA,EACJO,KAAMA,EACNC,OAAQA,EACR2D,OAAQ,kBAZE,SAAAnE,GAAE,OAAImC,EAAS1B,EAAgBL,cAAcJ,IAYzCI,CAAcJ,KAJvBA,U,MCZJ,SAAS6E,IAEtB,OACE,eAACxD,EAAD,WACE,2CACA,cAACS,EAAD,IACA,cAAC,EAAD,IACA,cAAC0C,EAAD,OCTNM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUhE,MAAOA,EAAjB,SACE,cAAC6D,EAAD,QAGJI,SAASC,eAAe,U,kBCX1BxF,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,WAAa,gCAAgC,gBAAkB,qCAAqC,kBAAoB,yC,kBCAxOD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,aAAe,kCAAkC,aAAe,kCAAkC,WAAa,mC","file":"static/js/main.dc624699.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__27z1n\",\"filterInput\":\"Filter_filterInput__qaMYm\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', (data) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    ...data\r\n  },\r\n}))\r\n\r\nconst filterContacts = createAction('contacts/filter')\r\n\r\nconst deleteContact = createAction('contacts/delete')\r\n\r\nconst contactActions =  { addContact, deleteContact, filterContacts };\r\nexport default contactActions;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst INITIAL_ITEMS = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst itemsReducer = createReducer(INITIAL_ITEMS, {\r\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\r\n  [contactsActions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [contactsActions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducers from './contacts/contactsReducers';\r\n\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducers,\r\n  },\r\n});\r\n\r\nexport default store;","export default function MainContainer({ children }) {\r\n  return (\r\n    <div className=\"mainContainer\">{children}</div>\r\n  )\r\n}","export const getFilterValue = (state) => state.contacts.filter\r\n\r\nexport const getContacts = (state) => state.contacts.items\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilterValue(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\r\n};","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import contactsActions from '../../redux/contacts/contactsActions';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport function ContactForm() {\r\n  \r\n  const initialState = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  const [state, setState] = useState(initialState)\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  \r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setState((prevState) => ({\r\n      ...prevState, [name]: value\r\n    }))\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    const { name, number } = state;\r\n    const isContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (isContact) {\r\n      resetContact();\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsActions.addContact({ name, number }));\r\n    resetContact();\r\n  }\r\n\r\n  const resetContact = () => {\r\n    setState({ ...initialState });\r\n  }\r\n\r\n  const { name, number } = state;\r\n  return (\r\n    <form className={s.contactForm} autoComplete=\"on\" onSubmit={handleSubmit}>\r\n      <label\r\n        className={s.contactLabel}\r\n        htmlFor={nameInputId}\r\n      >Name</label>\r\n      <input\r\n        className={s.contactInput}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        id={nameInputId}\r\n        onChange={handleChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n        \r\n      <label\r\n        htmlFor={numberInputId}\r\n        className={s.contactLabel}\r\n      >Phone number</label>\r\n      <input\r\n        className={s.contactInput}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        id={numberInputId}\r\n        onChange={handleChange}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n      <button className={s.contactBtn}\r\n        type=\"submit\"\r\n        name=\"submit\">Add Contact\r\n      </button>\r\n    </form>\r\n  )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getFilterValue } from \"../../redux/contacts/contactsSelectors\";\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport s from './Filter.module.css'\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filterValue = useSelector(getFilterValue);\r\n  const onChangeHandler = (e) => {\r\n    dispatch(contactsActions.filterContacts(e.target.value))\r\n  }\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input className={s.filterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filterValue}\r\n        onChange={onChangeHandler}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     contacts: state.contacts.items,\r\n//     filterValue: state.contacts.filter,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   onFilter: contactsActions.filterContacts,\r\n// };\r\nexport default Filter;\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n","import React from 'react';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactListItem ({ name, number, remove, id }) {\r\n\r\n  return (\r\n    <li key={id} className={s.contactItem}>\r\n      <span className={s.contactItemName}>{name}</span>\r\n      <span className={s.contactItemNumber}>{number}</span>\r\n      <button\r\n        className={s.contactBtn}\r\n        type=\"button\"\r\n        onClick={remove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getVisibleContacts } from \"../../redux/contacts/contactsSelectors\";\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport s from './ContactList.module.css'\r\n\r\n\r\nexport function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getVisibleContacts);\r\n\r\n  const deleteContact = id => dispatch(contactsActions.deleteContact(id));\r\n  const isShowContacts = contacts.length > 0\r\n  return (\r\n    <div>\r\n      {isShowContacts && (\r\n        <ul className={s.contactList}>\r\n          {contacts.map(({ id, name, number }) => (\r\n            <ContactListItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              remove={() => deleteContact(id)}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  )\r\n};","import React, { useState, useEffect } from 'react';\n// import { ToastContainer, toast } from 'react-toastify';\nimport MainContainer from \"../MainContainer/MainContainer\";\nimport { ContactForm } from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport {ContactList} from \"../ContactList/ContactList\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n\n  return (\n    <MainContainer>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n      {/* <ToastContainer theme=\"colored\" autoClose={3000} /> */}\n    </MainContainer>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__ZPntF\",\"contactItem\":\"ContactList_contactItem__3Kx0Q\",\"contactBtn\":\"ContactList_contactBtn__p6tJH\",\"contactItemName\":\"ContactList_contactItemName__sE5EW\",\"contactItemNumber\":\"ContactList_contactItemNumber__36tLQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__183BN\",\"contactInput\":\"ContactForm_contactInput__NXJF4\",\"contactLabel\":\"ContactForm_contactLabel__1vhTq\",\"contactBtn\":\"ContactForm_contactBtn__22wyQ\"};"],"sourceRoot":""}